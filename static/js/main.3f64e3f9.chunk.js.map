{"version":3,"sources":["Api/api.ts","components/CurrentUser/CurrentUser.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["URL","CurrentUser","state","selectedUser","clear","setState","props","click","this","loadUser","prevProps","userId","a","id","fetch","then","response","json","user","className","name","email","phone","type","onClick","React","Component","TodoList","search","filter","todos","selectedId","preparedTodos","todo","title","includes","completed","htmlFor","onChange","event","target","value","style","width","map","classnames","checked","readOnly","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"kVAAMA,G,MAAM,qC,OCaCC,EAAb,4MACEC,MAAe,CACbC,aAAc,MAFlB,EAeEC,MAAQ,WACN,EAAKC,SAAS,CAAEF,aAAc,OAC9B,EAAKG,MAAMC,MAAM,IAjBrB,uDAKE,WACEC,KAAKC,aANT,gCASE,SAAmBC,GACbA,EAAUC,SAAWH,KAAKF,MAAMK,QAClCH,KAAKC,aAXX,6DAoBE,4BAAAG,EAAA,sED1BuBC,EC2BeL,KAAKF,MAAMK,OD1B1CG,MAAM,GAAD,OAAId,EAAJ,kBAAiBa,IAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCwB7B,OACQd,EADR,OAGEK,KAAKH,SAAS,CAAEF,iBAHlB,iCD1BsB,IAACU,IC0BvB,YApBF,0EA0BE,WACE,IAAsBK,EAASV,KAAKN,MAA5BC,aAER,OACE,mCACGe,GACC,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SACE,sDAEGD,EAAKL,QAIV,oBAAIM,UAAU,oBAAd,SAAmCD,EAAKE,OACxC,mBAAGD,UAAU,qBAAb,SAAmCD,EAAKG,QACxC,mBAAGF,UAAU,qBAAb,SAAmCD,EAAKI,QAExC,wBACEC,KAAK,SACLJ,UAAU,4BACVK,QAAShB,KAAKJ,MAHhB,4BA5CZ,GAAiCqB,IAAMC,W,wBCGjCC,E,4MACJzB,MAAQ,CACN0B,OAAQ,GACRC,OAAQ,O,4CAGV,WAAU,IAAD,OACP,EAAqCrB,KAAKF,MAAlCwB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYxB,EAA3B,EAA2BA,MAEvByB,EAAgBF,EAAMD,QAAO,SAAAI,GAAI,OAAIA,EAAKC,MAAMC,SAAS,EAAKjC,MAAM0B,WAUxE,MAR0B,QAAtBpB,KAAKN,MAAM2B,SAEXG,EADwB,cAAtBxB,KAAKN,MAAM2B,OACGG,EAAcH,QAAO,SAAAI,GAAI,OAAIA,EAAKG,aAElCJ,EAAcH,QAAO,SAAAI,GAAI,OAAKA,EAAKG,cAKrD,sBAAKjB,UAAU,WAAf,UACE,wCAEA,sBAAKA,UAAU,2BAAf,UACE,uBAAMA,UAAU,sBAAhB,UACE,sBAAKA,UAAU,6BAAf,UACE,uBAAOkB,QAAQ,SAAf,8BACA,uBAAOd,KAAK,OAAOH,KAAK,SAASP,GAAG,SAASyB,SAAU,SAACC,GAAD,OAAW,EAAKlC,SAAS,CAAEuB,OAAQW,EAAMC,OAAOC,cAEzG,sBAAKtB,UAAU,6BAAf,UACE,uBAAOkB,QAAQ,SAAf,qBACA,yBAAQjB,KAAK,SAASP,GAAG,SAAS6B,MAAO,CAAEC,MAAO,SAAWL,SAAU,SAACC,GAAD,OAAW,EAAKlC,SAAS,CAAEwB,OAAQU,EAAMC,OAAOC,SAAvH,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,2BACA,wBAAQA,MAAM,YAAd,gCAIN,oBAAItB,UAAU,iBAAd,SACGa,EAAcY,KAAI,SAACX,GAAD,OACjB,qBAAkBd,UAAW0B,IAAW,iBAAkBZ,EAAKG,UAAY,0BAA4B,6BAAvG,UACE,kCACE,uBAAOb,KAAK,WAAWuB,QAASb,EAAKG,UAAWW,UAAQ,IACxD,4BAAId,EAAKC,WAGX,wBACEf,UAAW0B,IAAW,SAAU,wBAAyBZ,EAAKtB,SAAWoB,EAAa,kCAAoC,IAC1HR,KAAK,SACLC,QAAS,kBAAMjB,EAAM0B,EAAKtB,SAH5B,yBAKYsB,EAAKtB,YAXVsB,EAAKpB,mB,GAxCLY,IAAMC,WA8DdC,IClETqB,E,4MACJ9C,MAAe,CACb+C,eAAgB,EAChBnB,MAAO,I,EAUTN,QAAU,SAACX,GACT,EAAKR,SAAS,CAAE4C,eAAgBpC,K,uDARlC,WAAqB,IAAD,OHfbC,MAAM,GAAD,OAAId,EAAJ,WACTe,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UGgBxBF,MAAK,SAAAe,GACJ,EAAKzB,SAAS,CAAEyB,e,oBAQtB,WACE,MAAkCtB,KAAKN,MAA/B+C,EAAR,EAAQA,eAAgBnB,EAAxB,EAAwBA,MAExB,OACE,sBAAKX,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPvB,MAAOC,KAAKgB,QACZO,WAAYkB,MAIhB,qBAAK9B,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACG8B,EACC,cAAC,EAAD,CACEtC,OAAQsC,EACR1C,MAAOC,KAAKgB,UAEZ,8B,GArCEC,IAAMC,WA6CTsB,ICtDfE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f64e3f9.chunk.js","sourcesContent":["const URL = 'https://mate.academy/students-api';\n\nexport const getTodos = () => {\n  return fetch(`${URL}/todos`)\n    .then(response => response.json());\n};\n\nexport const getUsers = (id: number) => {\n  return fetch(`${URL}/users/${id}`)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../Api/api';\n\ntype Props = {\n  userId: number,\n  click: (id: number) => void;\n};\n\ntype State = {\n  selectedUser: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    selectedUser: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  clear = () => {\n    this.setState({ selectedUser: null });\n    this.props.click(0);\n  };\n\n  async loadUser() {\n    const selectedUser = await getUsers(this.props.userId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser: user } = this.state;\n\n    return (\n      <>\n        {user && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:&nbsp;\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"button CurrentUser__clear\"\n              onClick={this.clear}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './TodoList.scss';\nimport classnames from 'classnames';\n\ntype Props = {\n  todos: Todo[];\n  click: (id: number) => void;\n  selectedId: number;\n};\n\ntype State = {\n  search: string,\n  filter: string,\n};\n\nclass TodoList extends React.Component<Props, State> {\n  state = {\n    search: '',\n    filter: 'all',\n  };\n\n  render() {\n    const { todos, selectedId, click } = this.props;\n\n    let preparedTodos = todos.filter(todo => todo.title.includes(this.state.search));\n\n    if (this.state.filter !== 'all') {\n      if (this.state.filter === 'completed') {\n        preparedTodos = preparedTodos.filter(todo => todo.completed);\n      } else {\n        preparedTodos = preparedTodos.filter(todo => !todo.completed);\n      }\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form className=\"TodoList__list_form\">\n            <div className=\"TodoList__list_form-search\">\n              <label htmlFor=\"search\">Search by title:</label>\n              <input type=\"text\" name=\"search\" id=\"search\" onChange={(event) => this.setState({ search: event.target.value })} />\n            </div>\n            <div className=\"TodoList__list_form-search\">\n              <label htmlFor=\"status\">Filter:</label>\n              <select name=\"status\" id=\"status\" style={{ width: '250px' }} onChange={(event) => this.setState({ filter: event.target.value })}>\n                <option value=\"all\">All</option>\n                <option value=\"active\">Not completed</option>\n                <option value=\"completed\">completed</option>\n              </select>\n            </div>\n          </form>\n          <ul className=\"TodoList__list\">\n            {preparedTodos.map((todo) => (\n              <li key={todo.id} className={classnames('TodoList__item', todo.completed ? 'TodoList__item--checked' : 'TodoList__item--unchecked')}>\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classnames('button', 'TodoList__user-button', todo.userId === selectedId ? 'TodoList__user-button--selected' : '')}\n                  type=\"button\"\n                  onClick={() => click(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './Api/api';\nimport TodoList from './components/TodoList/TodoList';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => {\n        this.setState({ todos });\n      });\n  }\n\n  onClick = (id: number) => {\n    this.setState({ selectedUserId: id });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            click={this.onClick}\n            selectedId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                click={this.onClick}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}